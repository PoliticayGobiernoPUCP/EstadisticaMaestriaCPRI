toPlot=table(myData$sexo)
toPlot=table(data_alumnos$sexo)
barplot(toPlot,col="lightblue", #color del gráfico
xlab="Sexo",
ylab="Conteo de alumnos",
main="Distribución de sexo en el aula")
prop.table(table(data_alumnos$sexo)) # como plotearíamos estos resultados?
distribucion=table(data_alumnos$sexo)
chisq.test(distribucion)
names(distribucion[which.max(distribucion)]) #asi se obtiene
table(data_alumnos$religion)
table(data_alumnos$religion)
write.csv(data_alumnos, "data_alumnos.csv")
View(data_alumnos)
#instalemos el paquete "haven" primero (se toma su tiempo!)
library(haven)
folder="data"
fileName="PeruLAPOP2014.sav"
fileToRead=file.path(folder,fileName)
dataSpss=read_sav(fileToRead)
View(dataSpss)
variables=c("estratopri","b18", "vic1ext")
dataSpssSub=as.data.frame(dataSpss)[varsOfInterest]
variables=c("estratopri","b18", "vic1ext")
dataSpssSub=as.data.frame(dataSpss)[variables]
head(dataSpssSub) #veamos las primeras filas de nuestra data
#instalemos el paquete "foreign" primero (se toma su tiempo!)
library(foreign)
folder="data"
fileName="PeruLAPOP2014.sav"
fileToRead=file.path(folder,fileName)
dataSpss=read_sav(fileToRead, use.value.labels=T, to.data.frame=T)
#instalemos el paquete "foreign" primero (se toma su tiempo!)
library(foreign)
folder="data"
fileName="PeruLAPOP2014.sav"
fileToRead=file.path(folder,fileName)
dataSpss=read.spss(fileToRead, use.value.labels=T, to.data.frame=T)
View(dataSpss)
#instalemos el paquete "foreign" primero (se toma su tiempo!)
library(foreign)
folder="data"
fileName="PeruLAPOP2014.sav"
fileToRead=file.path(folder,fileName)
dataSpss=read.spss(fileToRead, use.value.labels=T, to.data.frame=T)
#instalemos el paquete "foreign" primero (se toma su tiempo!)
library(foreign)
folder="data"
fileName="PeruLAPOP2014.sav"
fileToRead=file.path(folder,fileName)
dataSpss=read.spss(fileToRead, to.data.frame=T)
View(dataSpss)
#instalemos el paquete "foreign" primero (se toma su tiempo!)
library(foreign)
folder="data"
fileName="PeruLAPOP2014.sav"
fileToRead=file.path(folder,fileName)
dataSpss=read.spss(fileToRead, to.data.frame=T)
View(dataSpss)
variables=c("estratopri","b18", "vic1ext")
dataSpssSub=as.data.frame(dataSpss)[variables]
head(dataSpssSub) #veamos las primeras filas de nuestra data
View(dataSpssSub)
#instalemos el paquete "foreign" primero (se toma su tiempo!)
library(foreign)
folder="data"
fileName="PeruLAPOP2014.sav"
fileToRead=file.path(folder,fileName)
dataSpss=read.spss(fileToRead, to.data.frame=T) #ignoremos las advertencias
variables=c("estratopri","b18", "vic1ext")
dataSpssSub=as.data.frame(dataSpss)[variables]
head(dataSpssSub) #veamos las primeras filas de nuestra data
View(dataSpss)
variables=c("estratopri","b18", "vic1ext")
dataSpssSub=as.data.frame(dataSpss)[variables]
head(dataSpssSub) #veamos las primeras filas de nuestra data
View(dataSpssSub)
#instalemos el paquete "foreign" primero (se toma su tiempo!)
library(foreign)
folder="data"
fileName="PeruLAPOP2014.sav"
fileToRead=file.path(folder,fileName)
dataSpss=read.spss(fileToRead, to.data.frame=T) #ignoremos las advertencias
variables=c("estratopri","b18", "vic1ext")
dataSpssSub=as.data.frame(dataSpss)[variables]
head(dataSpssSub) #veamos las primeras filas de nuestra data
View(dataSpssSub)
#instalemos el paquete "foreign" primero (se toma su tiempo!)
library(foreign)
folder="data"
fileName="PeruLAPOP2014.sav"
fileToRead=file.path(folder,fileName)
dataSpss=read.spss(fileToRead) #ignoremos las advertencias
View(dataSpssSub)
#instalemos el paquete "foreign" primero (se toma su tiempo!)
library(foreign)
folder="data"
fileName="PeruLAPOP2014.sav"
fileToRead=file.path(folder,fileName)
dataSpss=read.spss(fileToRead, to.data.frame=T) #ignoremos las advertencias
variables=c("estratopri","b18", "vic1ext")
dataSpssSub=as.data.frame(dataSpss)[variables]
head(dataSpssSub) #veamos las primeras filas de nuestra data
#instalemos el paquete "foreign" primero (se toma su tiempo!)
library(foreign)
folder="data"
fileName="PeruLAPOP2014.sav"
fileToRead=file.path(folder,fileName)
dataSpss=read.spss(fileToRead, to.data.frame=T) #ignoremos las advertencias
#instalemos el paquete "foreign" primero
library(foreign)
folder="data"
fileName="PeruLAPOP2014.sav"
fileToRead=file.path(folder,fileName)
dataSpss=read.spss(fileToRead, to.data.frame=T) #ignoremos las advertencias
variables=c("estratopri","b18", "vic1ext")
dataSpssSub=as.data.frame(dataSpss)[variables]
head(dataSpssSub) #veamos las primeras filas de nuestra data
#instalemos el paquete "foreign" primero
library(foreign)
folder="data"
fileName="PeruLAPOP2014.sav"
fileToRead=file.path(folder,fileName)
dataSpss=read.spss(fileToRead) #ignoremos las advertencias
variables=c("estratopri","b18", "vic1ext")
dataSpssSub=as.data.frame(dataSpss)[variables]
library(foreign)
folder="data"
fileName="PeruLAPOP2014.sav"
fileToRead=file.path(folder,fileName)
variables=c("estratopri","b18", "vic1ext")
dataSpssSub=read.spss(dataSpss, to.data.frame=T)[variables]
library(foreign)
folder="data"
fileName="PeruLAPOP2014.sav"
fileToRead=file.path(folder,fileName)
variables=c("estratopri","b18", "vic1ext")
dataSpssSub=read.spss(fileToRead, to.data.frame=T)[variables]
View(dataSpssSub)
library(foreign)
folder="data"
fileName="PeruLAPOP2014.sav"
fileToRead=file.path(folder,fileName)
variables=c("estratopri","b18", "vic1ext")
dataSpssSub=read.spss(fileToRead, to.data.frame=T)[variables]
library(foreign)
folder="data"
fileName="PeruLAPOP2014.sav"
fileToRead=file.path(folder,fileName)
variables=c("estratopri","b18", "vic1ext")
dataLAPOP=read.spss(fileToRead, to.data.frame=T)[variables]
library(foreign)
folder="data"
fileName="PeruLAPOP2014.sav"
fileToRead=file.path(folder,fileName)
variables=c("estratopri","b18", "vic1ext")
dataLAPOP=read.spss(fileToRead, to.data.frame=T)[variables]
table(dataLAPOP$vic1ext)
toPlot=table(data_alumnos$sexo)
toPlot=table(dataLAPOP$vic1ext)
barplot(toPlot,col="blue", #color del gráfico
xlab="Victimas de delincuencia",
ylab="Conteo de encuestados",
main="Distribución encuestados según victimización")
prop.table(table(dataLAPOP$vic1ext)) # como plotearíamos estos resultados?
distribucion=table(dataLAPOP$vic1ext)
chisq.test(distribucion)
names(distribucion[which.max(distribucion)]) #asi se obtiene
table(dataLAPOP$estratopri)
toPlot=table(dataLAPOP$estratopri)
barplot(toPlot,col="magenta",
xlab="Zona",
ylab= "Conteo de encuestados",
main="Distribución de encuestados según zona",
las=2)
toPlot=table(dataLAPOP$estratopri)
barplot(toPlot,col="magenta",
xlab="Zona",
ylab= "Conteo de encuestados",
main="Distribución de encuestados según zona",
las=1)
toPlot=table(dataLAPOP$estratopri)
barplot(toPlot,col="magenta",
xlab="Zona",
ylab= "Conteo de encuestados",
main="Distribución de encuestados según zona",
las=2)
distribution=table(dataLAPOP$estratopri)
chisq.test(distribution)
names(distribution[which.max(distribution)])
library(DescTools)  # instalar antes!
Gini(table(dataLAPOP$estratopri),na.rm = TRUE)
barplot(table(dataLAPOP$b18),las=1)
Median(dataLAPOP$b18,na.rm = T)
Median(dataLAPOP$b18,na.rm = T)
dataSpssSub$libcpre_self=ordered(dataLAPOP$b18)
dataLAPOP$b18=ordered(dataLAPOP$b18)
head(dataLAPOP$b18)
Median(dataLAPOP$b18,na.rm = T)
cumsum(prop.table(table(dataLAPOP$b18)))
Mode(dataLAPOP$b18,na.rm = T)
dataLAPOP$b18
boxplot(dataLAPOP$b18)
library(ggplot2)
data=na.omit(dataLAPOP)
varToPlot=as.numeric(dataLAPOP$b18)
thePlot=ggplot(data, aes(x=1,y=varToPlot)) + geom_boxplot()
thePlot
library(ggplot2)
data=na.omit(dataLAPOP)
varToPlot=as.numeric(dataLAPOP$b18)
thePlot=ggplot(data, aes(x=1,y=varToPlot)) + geom_boxplot()
thePlot
View(data)
library(ggplot2)
data=na.omit(dataLAPOP$b18)
varToPlot=as.numeric(data$b18)
View(dataLAPOP)
library(ggplot2)
data=na.omit(dataLAPOP)
varToPlot=as.numeric(data$b18)
thePlot=ggplot(data, aes(x=1,y=varToPlot)) + geom_boxplot()
thePlot
thePlot = thePlot + coord_flip()
thePlot
theLabels=c("1=Mucho", "2", "3", "4", "5", "6", "7=mucho")
thePlot= thePlot + scale_y_continuous(labels= theLabels,breaks=1:7)
thePlot
theLabels=c("1=Mucho", "2", "3", "4", "5", "6", "7=mucho")
thePlot= thePlot + scale_y_continuous(labels= theLabels,breaks=1:7) +
scale_x_continuous=NULL
theLabels=c("1=Mucho", "2", "3", "4", "5", "6", "7=mucho")
thePlot= thePlot + scale_y_continuous(labels= theLabels,breaks=1:7) +
scale_x_continuous(labels= NULL, breaks = NULL)
thePlot
thePlot + labs(title="Confiancia en la Policía Nacional", y = 'Respuestas', x=NULL) + scale_x_continuous(labels= NULL, breaks = NULL)
theLabels=c("1=Mucho", "2", "3", "4", "5", "6", "7=mucho")
thePlot= thePlot + scale_y_continuous(labels= theLabels,breaks=1:7)
thePlot
thePlot + labs(title="Confiancia en la Policía Nacional", y = 'Respuestas', x=NULL) + scale_x_continuous(labels= NULL, breaks = NULL)
thePlot + labs(title="Confianza en la Policía Nacional", y = 'Respuestas', x=NULL) + scale_x_continuous(labels= NULL, breaks = NULL)
thePlot + labs(title="Confianza en la Policía Nacional del Perú", y = 'Respuestas', x=NULL) + scale_x_continuous(labels= NULL, breaks = NULL)
Gini(table(dataLAPOP$b18),na.rm = T)
library(readxl)
fileName='idhPeru.xlsx'
fileToRead=file.path(folder,fileName)
dataIDH=read_excel(fileToRead)
dataIDH$habitantes
ggplot(dataIDH, aes(habitantes)) + geom_bar()
ggplot(dataIDH, aes(habitantes)) + geom_bar()
View(dataIDH)
View(dataIDH)
# # con qué carpeta estoy trabajando?
getwd()
#instalemos el paquete "foreign" primero
library(foreign)
folder="data"
fileName="PeruLAPOP2014.sav"
fileToRead=file.path(folder,fileName)
dataSpss=read.spss(fileToRead, to.data.frame=T) #ignoremos las advertencias
View(dataSpss)
variables=c("estratopri","b18", "vic1ext", "edad")
dataSpssSub=as.data.frame(dataSpss)[variables]
names(dataSpss)
variables=c("estratopri","b18", "vic1ext", "age")
dataSpssSub=as.data.frame(dataSpss)[variables]
variables=c("estratopri","b18", "vic1ext", "q2")
dataSpssSub=as.data.frame(dataSpss)[variables]
head(dataSpssSub) #veamos las primeras filas de nuestra data
library(foreign)
folder="data"
fileName="PeruLAPOP2014.sav"
fileToRead=file.path(folder,fileName)
variables=c("estratopri","b18", "vic1ext", "q2")
dataLAPOP=read.spss(fileToRead, to.data.frame=T)[variables] #ignoremos advertencias
dataLAPOP$q2
ggplot(dataLAPOP, aes(q2)) + geom_bar()
summary(dataLAPOP$q2)
summary(dataLAPOP$q2)
summary(dataLAPOP$q2)
libary(Hmisc)
library(Hmisc)
describe(dataLAPOP$q2)
library(Hmisc)
describe(dataLAPOP$q2)
library(Hmisc)
summary(dataLAPOP$q2)
library(Hmisc)
summary(dataLAPOP$q2)
library(Hmisc)
summary(dataLAPOP$q2)
library(Hmisc)
summary(dataLAPOP$q2)
ggplot(dataLAPOP, aes(x = 1, y = q2)) + geom_boxplot() +coord_flip()
ggplot(dataLAPOP, aes(x = 1, y = q2)) + geom_boxplot() +coord_flip()
str(dataLAPOP$q2)
dataLAPOP$q2 <- as.integer(dataLAPOP$q2)
summary(dataLAPOP$q2)
summary(dataLAPOP$q2)
ggplot(dataLAPOP, aes(q2)) + geom_bar()
summary(dataLAPOP$q2)
ggplot(dataLAPOP, aes(x = 1, y = q2)) + geom_boxplot() +coord_flip()
ggplot(dataLAPOP, aes(x = 1, y = q2)) + geom_boxplot() +coord_flip() + labs(title="Edad Encuestados", y = 'Edad', x=NULL) + scale_x_continuous(labels= NULL, breaks = NULL)
ggplot(dataLAPOP, aes(x = 1, y = q2)) + geom_boxplot() +coord_flip() + labs(title="Edad Encuestados", y = "Edad", x=NULL) + scale_x_continuous(labels= NULL, breaks = NULL)
library(readxl)
fileName='idhPeru.xlsx'
fileToRead=file.path(folder,fileName)
dataIDH=read_excel(fileToRead)
#cuántos casos tenemos?
length(dataIDH)
ggplot(dataIDH,aes(x=IDH)) + geom_histogram()
ggplot(dataIDH,aes(y=IDH,x=1)) + geom_boxplot() + coord_flip()
ggplot(dataIDH,aes(y=IDH,x=1)) + geom_boxplot() + coord_flip() + labs(title="Indice de Desarrollo Humano 2011", y=NULL, x=NULL) +  scale_x_continuous(labels= NULL, breaks = NULL) +
scale_y_continuous(limits = c(0,1))
ggplot(dataIDH,aes(y=IDH,x=1)) + geom_boxplot() + coord_flip() + labs(title="Indice de Desarrollo Humano 2011", y=NULL, x=NULL) +  scale_x_continuous(labels= NULL, breaks = NULL)
View(dataIDH)
ggplot(dataLAPOP, aes(x = 1, y = q2)) + geom_boxplot() +coord_flip() + labs(title="Edad Encuestados", y = "Edad", x=NULL) + scale_x_continuous(labels= NULL, breaks = NULL)
ggplot(dataIDH,aes(y=IDH,x=1)) + geom_boxplot() + coord_flip() + labs(title="Indice de Desarrollo Humano 2012", y=NULL, x=NULL) +  scale_x_continuous(labels= NULL, breaks = NULL)
ggplot(dataIDH,aes(y=IDH,x=1)) + geom_boxplot() + coord_flip() + labs(title="Indice de Desarrollo Humano 2012", y="IDH", x=NULL) +  scale_x_continuous(labels= NULL, breaks = NULL)
table(dataLAPOP$vic1ext)
variables=c("estratopri","b18", "vic1ext", "q1", "q2")
dataSpssSub=as.data.frame(dataSpss)[variables]
head(dataSpssSub) #veamos las primeras filas de nuestra data
library(foreign)
folder="data"
fileName="PeruLAPOP2014.sav"
fileToRead=file.path(folder,fileName)
variables=c("estratopri","b18", "vic1ext", "q1", "q2")
dataLAPOP=read.spss(fileToRead, to.data.frame=T)[variables] #ignoremos advertencias
table(dataLAPOP$vic1ext)
table(dataLAPOP$q1)
table(dataLAPOP$q1)
table(dataLAPOP$vic1ext,dataLAPOP$q1)
table(dataLAPOP$vic1ext,dataLAPOP$q1)
library(gmodels)
CrossTable(dataLAPOP$vic1ext,dataLAPOP$q1,prop.t=F, prop.r=F, prop.c=F,prop.chisq=F)
# Share along years per party:
CrossTable(dataLAPOP$vic1ext,dataLAPOP$q1,prop.t=F, prop.r=T, prop.c=F,prop.chisq=F)
CrossTable(dataLAPOP$vic1ext,dataLAPOP$q1,prop.t=F, prop.r=F, prop.c=T,prop.chisq=F)
CrossTable(dataLAPOP$vic1ext,dataLAPOP$q1,prop.t=F, prop.r=F, prop.c=F,prop.chisq=F,chisq=T)
legendPlot=levels(as.factor(unique(dataLAPOP$vic1ext)))
bartable = table(dataLAPOP$vic1ext,dataLAPOP$q1)  ## tabla cruzada
barplot(bartable, beside = TRUE,legend=legendPlot)  ## gráfico
legendPlot=levels(as.factor(unique(dataLAPOP$q1)))
bartable = table(dataLAPOP$q1,dataLAPOP$vic1ext)  ## tabla cruzada
barplot(bartable, beside = TRUE,legend=legendPlot)  ## gráfico
library(ggplot2)
#turn table into a data frame:
subLAPOP=as.data.frame(table(dataLAPOP$q1,dataLAPOP$vic1ext))
names(governorDRTb)=c("sexo","victimización", "f")
library(ggplot2)
#turn table into a data frame:
subLAPOP=as.data.frame(table(dataLAPOP$q1,dataLAPOP$vic1ext))
names(subLAPOP)=c("sexo","victimización", "f")
#Plot the Data
g <- ggplot(subLAPOP, aes(q1, vic1ext)) + geom_point(aes(size = f), colour = "green") + theme_bw() + xlab("") + ylab("") +theme(legend.position="none")
g + scale_size_continuous(range=c(5,30)) + geom_text(aes(label = f))
View(subLAPOP)
library(ggplot2)
#turn table into a data frame:
subLAPOP=as.data.frame(table(dataLAPOP$q1,dataLAPOP$vic1ext))
names(subLAPOP)=c("sexo","victimizacion", "f")
#Plot the Data
g <- ggplot(subLAPOP, aes(sexo, victimizacion)) + geom_point(aes(size = f), colour = "green") + theme_bw() + xlab("") + ylab("") +theme(legend.position="none")
g + scale_size_continuous(range=c(5,30)) + geom_text(aes(label = f))
View(dataIDH)
library(foreign)
folder="data"
fileName="idePeru2012.csv"
fileToRead=file.path(folder,fileName)
dataIDE=read.csv(fileToRead)
library(foreign)
folder="data"
fileName="idePeru2012.csv"
fileToRead=file.path(folder,fileName)
dataIDE=read.csv(fileToRead)
ggplot(dataIDE,aes(x=IDE)) + geom_histogram()
ggplot(dataIDE,aes(y=IDE,x=1)) + geom_boxplot() + coord_flip() + labs(title="Indice de Densidad Estatal 2012", y="IDE", x=NULL) +  scale_x_continuous(labels= NULL, breaks = NULL)
# solo las contribuciones de negocios:
p <- ggplot(datIDE, aes(IDE, costa))
# solo las contribuciones de negocios:
p <- ggplot(dataIDE, aes(IDE, costa))
p + geom_boxplot()
# solo las contribuciones de negocios:
p <- ggplot(dataIDE, aes(IDE, costa))
p + geom_boxplot()
View(dataIDE)
# solo las contribuciones de negocios:
p <- ggplot(dataIDE, aes(IDE, capital))
p + geom_boxplot()
# solo las contribuciones de negocios:
p <- ggplot(dataIDE, aes(capital, IDE))
p + geom_boxplot()
# Creo una funciónpara el error standard de la media (seMean):
seMean = function(x) sd(x)/sqrt(length(x))
# Media por grupo
means=aggregate(list(mean=dataIDE$IDE),
list(capital=dataIDE$capital),mean)
# error standard por grupo: (usando mi función)
sems=aggregate(list(mean=dataIDE$IDE),
list(capital=dataIDE$capital),seMean)
means
sems
#usando MERGE:
data=merge(means,sems) # party es la 'key' para combinar
#tenemos:
data
#usando MERGE:
data=merge(means,sems) # party es la 'key' para combinar
#tenemos:
data
View(data)
means
sems
merge(means,sems)
merge(means,sems, by="capital")
#usando MERGE:
data=merge(means,sems, by="capital") # capital es la 'key' para combinar
#tenemos:
data
# Creo una funciónpara el error standard de la media (seMean):
seMean = function(x) sd(x)/sqrt(length(x))
# Media por grupo
means=aggregate(list(mean=dataIDE$IDE),
list(capital=dataIDE$capital),mean)
# error standard por grupo: (usando mi función)
sems=aggregate(list(semean=dataIDE$IDE),
list(capital=dataIDE$capital),seMean)
means
sems
#usando MERGE:
data=merge(means,sems) # capital es la 'key' para combinar
#tenemos:
data
# Creo una funciónpara el error standard de la media (seMean):
seMean = function(x) sd(x)/sqrt(length(x))
# Media por grupo
means=aggregate(list(mean=dataIDE$IDE),
list(capital=dataIDE$capital),mean)
# error standard por grupo: (usando mi función)
sems=aggregate(list(seMean=dataIDE$IDE),
list(capital=dataIDE$capital),seMean)
means
sems
#usando MERGE:
data=merge(means,sems) # capital es la 'key' para combinar
#tenemos:
data
# adding confidence interval limits:
data$lower=data$mean-2*data$seMean
data$upper=data$mean+2*data$seMean
## version final:
data
# this creates a plot of  the points (means):
meanPlot = ggplot(data, aes(y=mean, x=capital)) + geom_point()
# this adds the error bars:
errorPlot = meanPlot + geom_errorbar(aes(ymin = lower, ymax = upper))
# final result
errorPlot
t.test(dataIDE$IDE~dataIDE$capital,var.equal = T)
ggplot(dataIDE, aes(IDE, colour = party)) +
geom_density()
ggplot(dataIDE, aes(IDE, colour = capital)) +
geom_density()
with(dataIDE, tapply(IDE, tamano, mean) )
m <- ggplot(dataIDE, aes(x = IDE))
m + geom_histogram(bins=20) + facet_wrap(~tamano,scales = "free")
View(dataIDE)
m <- ggplot(dataIDE, aes(x = IDE))
m + geom_histogram(bins=20) + facet_wrap(~tamano,scales = "free")
model = aov(IDE ~ tamano, data = dataIDE)
summary(model)
TukeyHSD(model)
TukeyHSD(model)
model = aov(IDE ~ tamano, data = dataIDE)
summary(model)
TukeyHSD(model)
str(dataIDE)
dataIDE$tamano <- as.factor(dataIDE$tamano)
with(dataIDE, tapply(IDE, tamano, mean) )
m <- ggplot(dataIDE, aes(x = IDE))
m + geom_histogram(bins=20) + facet_wrap(~tamano,scales = "free")
model = aov(IDE ~ tamano, data = dataIDE)
summary(model)
TukeyHSD(model)
result=as.data.frame(TukeyHSD(model)$code)
result[4]<0.05
result=as.data.frame(TukeyHSD(model)$code)
result
result=as.data.frame(TukeyHSD(model)$tamano)
result[4]<0.05
kruskal.test(IDE ~ tamano, data = governorDR)
kruskal.test(IDE ~ tamano, data = dataIDE)
library(dunn.test)
result=dunn.test(dataIDE$IDE, dataIDE$tamano),  method="bh",kw=F)
library(dunn.test)
result=dunn.test(dataIDE$IDE,dataIDE$tamano) method="bh",kw=F)
library(dunn.test)
result=dunn.test(dataIDE$IDE,dataIDE$tamano),  method="bh",kw=F)
View(dataIDE)
res <- cor(dataIDE[,c(3:8)])
round(res, 2)
res <- cor(dataIDE[,c(4:8)])
round(res, 2)
library(car)
library(car)
scatterplotMatrix(dataIDE[,c(4:8)],
main="Simple Scatterplot Matrix")
cor(dataIDH[,c(4:8)],use='complete.obs',method='spearman')
cor(dataIDE[,c(4:8)],use='complete.obs',method='spearman')
cor(dataIDE[,c(4:8)],method='spearman')
cor(dataIDE[,c(4:8)],method='spearman')
