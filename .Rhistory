raizvalores=c()
for (valor in valores){
raizvalores=c(raizvalores,sqrt(valor))
}
# to see the results:
raizvalores
c(raizvalores,sqrt(valor))
raizvalores
valores=c(9,25,-100)
raizvalores=c()
for (valor in valores){
raizvalores=c(sqrt(valor))
}
# to see the results:
raizvalores
c(raizvalores,sqrt(valor))
valores=c(9,25,-100)
raizvalores=c()
for (valor in valores){
raizvalores=c(raizvalores,sqrt(valor))
}
# to see the results:
raizvalores
edad
nombre
if (alumnos$edad[1]%%2==0)
{print("it is even")}
alumnos$edad <- as.numeric(alumnos$edad)
if (alumnos$edad[1]%%2==0)
{print("it is even")}
if (alumnos$edad[1]%%2==0)
{print("it is even")}
setwd("~/Documents/GitHub/EstadisticaMaestriaCPRI")
library(foreign)
mapa<-read.dbf("provinciasPeru.dbf")
View(mapa)
View(mapa)
setwd("~/Documents/GitHub/EstadisticaMaestriaCPRI")
idhPeru<- read.xlsx("idhPeru.xlsx",skipEmptyRows = T, skipEmptyCols = T, sheet=4, startRow = 5)
library(openxlsx)
idhPeru<- read.xlsx("idhPeru.xlsx",skipEmptyRows = T, skipEmptyCols = T, sheet=4, startRow = 5)
View(idhPeru)
View(idhPeru)
View(mapa)
View(idhPeru)
idhPeru <- regionesprovincias[is.na(idhPeru$X2),]
idhPeru <- idhPeru[is.na(idhPeru$X2),]
View(idhPeru)
idhPeru<- idhPeru[complete.cases(idhPeru),]
View(idhPeru)
idhPeru<- read.xlsx("idhPeru.xlsx",skipEmptyRows = T, skipEmptyCols = T, sheet=4, startRow = 5)
idhPeru <- idhPeru[is.na(idhPeru$X2),]
View(idhPeru)
View(idhPeru)
names(idhPeru)
idhPeru <- idhPeru[,-c(2,5,7,9,11,13,15)]
View(idhPeru)
View(mapa)
d<- read.xlsx("idhPeru.xlsx",skipEmptyRows = T, skipEmptyCols = T, sheet=4, startRow = 5)
View(d)
rm(d)
View(mapa)
View(idhPeru)
idhPeru<- read.xlsx("idhPeru.xlsx",skipEmptyRows = T, skipEmptyCols = T, sheet=4, startRow = 5)
idhPeru <- idhPeru[,-c(2,5,7,9,11,13,15)]
idhPeru <- idhPeru[-c(1435, 2056:2061),]
idhPeru <- idhPeru[is.na(idhPeru$X2),]
idhPeru<- read.xlsx("idhPeru.xlsx",skipEmptyRows = T, skipEmptyCols = T, sheet=4, startRow = 5)
idhPeru <- idhPeru[-c(1435, 2056:2061),]
idhPeru <- idhPeru[,-c(2,5,7,9,11,13,15)]
idhPeru <- idhPeru[is.na(idhPeru$X2),]
idhPeru<- read.xlsx("idhPeru.xlsx",skipEmptyRows = T, skipEmptyCols = T, sheet=4, startRow = 5)
idhPeru <- idhPeru[,-c(2,5,7,9,11,13,15)]
idhPeru <- idhPeru[-c(1435, 2056:2061),]
idhPeru <- idhPeru[is.na(idhPeru$X2),]
idhPeru<- read.xlsx("idhPeru.xlsx",skipEmptyRows = T, skipEmptyCols = T, sheet=4, startRow = 5)
idhPeru <- idhPeru[is.na(idhPeru$X2),]
idhPeru <- idhPeru[,-c(2,5,7,9,11,13,15)]
idhPeru <- idhPeru[-c(1435, 2056:2061),]
View(mapa)
View(idhPeru)
str(idhPeru)
colnames(idhPeru) <- c("Ubigeo", "Provincia", "habitantes", "IDH", "esperanza", "secundaria", "educa", "percapitaf")
View(idhPeru)
rownames(idhPeru) <- 1:nrow(idhPeru)
View(idhPeru)
idhPeru<- read.xlsx("idhPeru.xlsx",skipEmptyRows = T, skipEmptyCols = T, sheet=4, startRow = 5)
idhPeru <- idhPeru[is.na(idhPeru$X2),] #seleccionar provincias
idhPeru <- idhPeru[,-c(2,5,7,9,11,13,15)]#eliminar columnas
idhPeru <- idhPeru[-c(1435, 2056:2061),]#eliminar filas innecesarias
View(idhPeru)
View(idhPeru)
idhPeru[-c(1435,2056:2061),]
idhPeru <- idhPeru[-c(1435,2056:2061),]#eliminar filas innecesarias
idhPeru<- read.xlsx("idhPeru.xlsx",skipEmptyRows = T, skipEmptyCols = T, sheet=4, startRow = 5)
idhPeru <- idhPeru[-c(1435,2056:2061),]#eliminar filas innecesarias
idhPeru <- idhPeru[is.na(idhPeru$X2),] #seleccionar provincias
idhPeru <- idhPeru[,-c(2,5,7,9,11,13,15)]#eliminar columnas
colnames(idhPeru) <- c("Ubigeo", "Provincia", "habitantes", "IDH", "esperanza", "secundaria", "educa", "percapitaf")
rownames(idhPeru) <- 1:nrow(idhPeru)
View(mapa)
View(idhPeru)
idh_elec <- read.csv("idh_elec.csv",strip.white = T,stringsAsFactors = F)
View(idh_elec)
names(idh_elec)
idh_elec2 <- as.data.frame(aggregate(cbind(PPK, FP) ~ ubiProv, data = idh_elec, sum, na.rm = F))
View(idh_elec)
View(idh_elec2)
idh_elec2 <- as.data.frame(aggregate(cbind(PPK, FP) ~ ubiProv + prov, data = idh_elec, sum, na.rm = F))
View(idh_elec2)
idh_elec <- as.data.frame(aggregate(cbind(PPK, FP) ~ ubiProv + prov, data = idh_elec, sum, na.rm = F))
View(idh_elec)
mapa<-read.dbf("provinciasPeru.dbf")
View(mapa)
View(idh_elec)
fecundidd<- read.xls("fecundidad.xls",skipEmptyRows = T, skipEmptyCols = T, sheet=4, startRow = 5)
fecundidd<- read.xlsx("fecundidad.xls",skipEmptyRows = T, skipEmptyCols = T, sheet=4, startRow = 5)
install.packages("gdata")
library(gdata)
fecundidd<- read.xlsx("fecundidad.xls")
fecundidd<- read.xls("fecundidad.xls")
fecundidad<- read.xlsx("fecundidad.xlsx",skipEmptyRows = T, skipEmptyCols = T)
View(fecundidad)
fecundidad<- read.xlsx("fecundidad.xlsx",skipEmptyRows = T, skipEmptyCols = T, startRow = 2)
View(fecundidad)
fecundidad<- read.xlsx("fecundidad.xlsx",skipEmptyRows = T, skipEmptyCols = T, startRow = 3)
View(fecundidad)
View(fecundidad)
substrRight <- function(x, n){
substr(x, nchar(x)-n+1, nchar(x))
}
substrRight(fecundidad$Ubigeo)
substrRight(fecundidad$Ubigeo,2)
fecundidad$prov_ub <- substrRight(fecundidad$Ubigeo,2)
View(fecundidad)
fecundidad$prov_ub <- substrRight(fecundidad$Ubigeo,3)
fecundidad$prov_ub <- substrRight(fecundidad$Ubigeo,2)
View(fecundidad)
substr(fecundidad$Ubigeo,5,6)
View(fecundidad)
fecundidad$prov <- substr(fecundidad$Ubigeo,5,6)
substr(fecundidad$Ubigeo,3,4)
fecundidad$dep<- substr(fecundidad$Ubigeo,3,4)
fecundidad$provincias <- fecundidad[fecundidad(!fecundidad$dep=="00" & fecundidad$prov=="00"),]
fecundidad$provincias <- fecundidad[!fecundidad$dep=="00" & fecundidad$prov=="00",]
fecundidad[!fecundidad$dep=="00" & fecundidad$prov=="00",]
fecundidad<- fecundidad[!fecundidad$dep=="00" & fecundidad$prov=="00",]
View(fecundidad)
View(fecundidad)
View(fecundidad)
fecundidad<- fecundidad[complete.cases(fecundidad),]
View(fecundidad)
names(fecundidad)
colnames(idhPeru) <- c("Ubigeo", "Provincia", "mortalidadinf")
View(fecundidad)
View(fecundidad)
fecundidad<- read.xlsx("fecundidad.xlsx",skipEmptyRows = T, skipEmptyCols = T, startRow = 3)
fecundidad$prov <- substr(fecundidad$Ubigeo,5,6) #identificar provincias y departamentos: 00
fecundidad$dep<- substr(fecundidad$Ubigeo,3,4) #identificar departamentos: 00
fecundidad<- fecundidad[!fecundidad$dep=="00" & fecundidad$prov=="00",][,c(1:5)] #seleccionar provincias
View(fecundidad)
fecundidad<- fecundidad[complete.cases(fecundidad),]
View(idhPeru)
colnames(idhPeru) <- c("Ubigeo", "Provincia", "habitantes", "IDH", "esperanza", "secundaria", "educa", "percapitaf")
idh_elec <- read.csv("idh_elec.csv",strip.white = T,stringsAsFactors = F)
idh_elec <- as.data.frame(aggregate(cbind(PPK, FP) ~ ubiProv + prov, data = idh_elec, sum, na.rm = F))
View(idh_elec)
rm(idh_elec2)
View(fecundidad)
colnames(fecundidad) <- c("Ubigeo", "Provincia", "mor_inf", "fecundidad", "desnutricion")
View(fecundidad)
rownames(fecundidad) <- 1:nrow(fecundidad)
View(fecundidad)
View(fecundidad)
View(fecundidad)
fecundidad[c(3:5)] =lapply(fecundidad[c(3:5)],as.numeric) #volverlas numericas
str(fecundidad)
View(fecundidad)
View(idhPeru)
View(idh_elec)
View(fecundidad)
colnames(fecundidad) <- c("Ubigeo", "Provincia", "mortalidadinf", "fecundidad", "desnutricion")
indicadores<- read.xlsx("indicadoresvarios.xlsx",skipEmptyRows = T, skipEmptyCols = T)
View(indicadores)
indicadores<- read.xlsx("indicadoresvarios.xlsx",skipEmptyRows = T, skipEmptyCols = T, startRow = 5)
View(indicadores)
indicadores<- read.xlsx("indicadoresvarios.xlsx",skipEmptyRows = T, skipEmptyCols = T, startRow = 7)
View(indicadores)
View(indicadores)
head(indicadores)
tail(indicadores)
View(indicadores)
indicadores <- indicadores[,-c(1,4, 7: 14)]#eliminar columnas
View(indicadores)
View(fecundidad)
View(indicadores)
colnames(indicadores) <- c("Departamento", "Provincia", "densidadpob", "mortalidadinf", "analfabetismo",
"analfabetismo_urb", "analfabetismo_rural", "analfabetismo_h", "analfabetismo_m")
View(indicadores)
str(indicadores)
indicadores$analfabetismo_rural<- as.numeric(indicadores$analfabetismo_rural)
str(indicadores)
View(indicadores)
poblacion<- read.xlsx("poblacion.xlsx")
View(poblacion)
View(poblacion)
poblacion<- read.xlsx("poblacion.xlsx", startRow = 5)
View(poblacion)
poblacion<- read.xlsx("poblacion.xlsx", startRow = 7)
View(poblacion)
poblacion<- read.xlsx("poblacion.xlsx",skipEmptyRows = T, skipEmptyCols = T startRow = 7)
poblacion<- read.xlsx("poblacion.xlsx",skipEmptyRows = T, skipEmptyCols = T ,startRow = 7)
View(poblacion)
poblacion <- poblacion[,-c(3)]#eliminar columnas
View(poblacion)
poblacion<- read.xlsx("poblacion.xlsx",skipEmptyRows = T, skipEmptyCols = T ,startRow = 7)
View(poblacion)
poblacion <- poblacion[,-c(4)]#eliminar columnas
View(poblacion)
View(poblacion)
poblacion<- read.xlsx("poblacion.xlsx",skipEmptyRows = T, skipEmptyCols = T ,startRow = 7)
poblacion <- poblacion[,-c(1,4)]#eliminar columnas
View(poblacion)
View(poblacion)
colnames(poblacion) <- c("Departamento", "Provincia", "pob", "pob_ur", "pob_rural", "pob_h", "pob_m")
View(poblacion)
str(poblacion)
ingreso<- read.xlsx("Ingreso-Per-Capita.xlsx")
View(ingreso)
View(ingreso)
ingreso<- read.xlsx("Ingreso-Per-Capita.xlsx",skipEmptyRows = T, skipEmptyCols = T ,startRow = 3)
View(poblacion)
View(ingreso)
View(poblacion)
View(mapa)
View(indicadores)
View(poblacion)
View(ingreso)
ingreso <- ingreso[is.na(ingreso$Distrito),] #seleccionar provincias y departamentos
View(ingreso)
ingreso<- read.xlsx("Ingreso-Per-Capita.xlsx",skipEmptyRows = T, skipEmptyCols = T ,startRow = 3)
View(ingreso)
ingreso <- ingreso[is.na(ingreso$Distrito),] #seleccionar provincias y departamentos
ingreso <- ingreso[!is.na(ingreso$Provincia),] #seleccionar provincias
View(ingreso)
poblacion <- poblacion[,c(1:3,5)]#seleccionar columas
poblacion<- read.xlsx("poblacion.xlsx",skipEmptyRows = T, skipEmptyCols = T ,startRow = 7)
poblacion <- poblacion[,-c(1,4)]#eliminar columnas innecesarias
colnames(poblacion) <- c("Departamento", "Provincia", "pob", "pob_ur", "pob_rural", "pob_h", "pob_m")
View(poblacion)
ingreso <- ingreso[,c(1:3,5)]#seleccionar columas
View(ingreso)
colnames(ingreso) <- c("Ubigeo", "Departamento", "Provincia", "percapitaf")
View(ingreso)
View(mapa)
mapa$Provincia <- toupper(mapa$NAME_2) #ver diferencia entre apply y lapply: apply trabaja a nivel de filas, mientras que lapply trabaja a nivel de columnas
View(mapa)
iconv(mapa$Provincia, to='ASCII//TRANSLIT')
iconv(mapa$Provincia, to='Latin-TRANSLIT')
stri_trans_general(mapa$Provincia,"Latin-ASCII")
library(stringi)
stri_trans_general(mapa$Provincia,"Latin-ASCII")
mapa$Provincia <- stri_trans_general(mapa$Provincia,"Latin-ASCII")
View(mapa)
View(idh_elec)
View(idh_elec)
colnames(idh_elect) <- ("Ubigeo", "Provincia", "Voto_PPK", "Voto_FP")
colnames(idh_elec) <- ("Ubigeo", "Provincia", "Voto_PPK", "Voto_FP")
colnames(idh_elec) <- c("Ubigeo", "Provincia", "Voto_PPK", "Voto_FP")
View(poblacion)
idhPeru$Provincia <- stri_trans_general(idhPeru$Provincia,"Latin-ASCII") #quitar tildes y ñs
View(idhPeru)
View(idh_elec)
View(idhPeru)
View(idh_elec)
View(idhPeru)
fecundidad$Provincia <- stri_trans_general(fecundidad$Provincia,"Latin-ASCII") #quitar tildes y ñs
View(fecundidad)
View(indicadores)
View(idhPeru)
idhPeru$Provincia <- toupper(idhPeru$Provincia #crear nueva variable con mayusculas
idhPeru$Provincia <- stri_trans_general(idhPeru$Provincia,"Latin-ASCII") #quitar tildes y ñs
#### idhelec #mayusculas sin tildes
idh_elec <- read.csv("idh_elec.csv",strip.white = T,stringsAsFactors = F)
idh_elec <- as.data.frame(aggregate(cbind(PPK, FP) ~ ubiProv + prov, data = idh_elec, sum, na.rm = F))
colnames(idh_elec) <- c("Ubigeo", "Provincia", "Voto_PPK", "Voto_FP")
#### fecundidad #mayusculas y sin tildes
fecundidad<- read.xlsx("fecundidad.xlsx",skipEmptyRows = T, skipEmptyCols = T, startRow = 3)
fecundidad$prov <- substr(fecundidad$Ubigeo,5,6) #identificar provincias y departamentos: 00
fecundidad$dep<- substr(fecundidad$Ubigeo,3,4) #identificar departamentos: 00
fecundidad<- fecundidad[!fecundidad$dep=="00" & fecundidad$prov=="00",][,c(1:5)] #seleccionar provincias
fecundidad<- fecundidad[complete.cases(fecundidad),]
colnames(fecundidad) <- c("Ubigeo", "Provincia", "mortalidadinf", "fecundidad", "desnutricion")
rownames(fecundidad) <- 1:nrow(fecundidad)
fecundidad[c(3:5)] =lapply(fecundidad[c(3:5)],as.numeric) #volverlas numericas
fecundidad$Provincia <- stri_trans_general(fecundidad$Provincia,"Latin-ASCII") #quitar tildes y ñs
### indicadoresvarios #minusculas con tildes
indicadores<- read.xlsx("indicadoresvarios.xlsx",skipEmptyRows = T, skipEmptyCols = T, startRow = 7)
indicadores <- indicadores[,-c(1,4, 7: 14)]#eliminar columnas innecesarias
colnames(indicadores) <- c("Departamento", "Provincia", "densidadpob", "mortalidadinf", "analfabetismo",
"analfabetismo_urb", "analfabetismo_rural", "analfabetismo_h", "analfabetismo_m")
#analfabetismo rural está como caracter
indicadores$analfabetismo_rural<- as.numeric(indicadores$analfabetismo_rural)
### poblacion #minusculas con tildes
poblacion<- read.xlsx("poblacion.xlsx",skipEmptyRows = T, skipEmptyCols = T ,startRow = 7)
poblacion <- poblacion[,-c(1,4)]#eliminar columnas innecesarias
colnames(poblacion) <- c("Departamento", "Provincia", "pob", "pob_ur", "pob_rural", "pob_h", "pob_m")
### ingreso per capita #minusculas con tildes
ingreso<- read.xlsx("Ingreso-Per-Capita.xlsx",skipEmptyRows = T, skipEmptyCols = T ,startRow = 3)
ingreso <- ingreso[is.na(ingreso$Distrito),] #eliminar distritos
ingreso <- ingreso[!is.na(ingreso$Provincia),] #seleccionar provincias
ingreso <- ingreso[,c(1:3,5)]#seleccionar columas
colnames(ingreso) <- c("Ubigeo", "Departamento", "Provincia", "percapitaf")
idhPeru$Provincia <- toupper(idhPeru$Provincia) #crear nueva variable con mayusculas
View(idhPeru)
View(fecundidad)
indicadores$Provincia <- toupper(indicadores$Provincia) #crear nueva variable con mayusculas
View(indicadores)
indicadores$Provincia <- stri_trans_general(indicadores$Provincia,"Latin-ASCII") #quitar tildes y ñs
View(indicadores)
View(indicadores)
fecundidad<- read.xlsx("fecundidad.xlsx",skipEmptyRows = T, skipEmptyCols = T, startRow = 3)
fecundidad$prov <- substr(fecundidad$Ubigeo,5,6) #identificar provincias y departamentos: 00
fecundidad$dep<- substr(fecundidad$Ubigeo,3,4) #identificar departamentos: 00
fecundidad<- fecundidad[!fecundidad$dep=="00" & fecundidad$prov=="00",][,c(1:5)] #seleccionar provincias
fecundidad<- fecundidad[complete.cases(fecundidad),]
colnames(fecundidad) <- c("Ubigeo", "Provincia", "mortalidadinf", "fecundidad", "desnutricion")
rownames(fecundidad) <- 1:nrow(fecundidad)
fecundidad[c(3:5)] =lapply(fecundidad[c(3:5)],as.numeric) #volverlas numericas
View(fecundidad)
fecundidad$Provincia <- stri_trans_general(fecundidad$Provincia,"Latin-ASCII") #quitar tildes y ñs
indicadores$Provincia <- toupper(indicadores$Provincia) #mayusculas
indicadores$Provincia <- stri_trans_general(indicadores$Provincia,"Latin-ASCII") #quitar tildes y ñs
View(indicadores)
poblacion$Provincia <- toupper(poblacion$Provincia) #mayusculas
poblacion$Provincia <- stri_trans_general(poblacion$Provincia,"Latin-ASCII") #quitar tildes y ñs
View(poblacion)
ingreso$Provincia <- toupper(ingreso$Provincia) #mayusculas
ingreso$Provincia <- stri_trans_general(ingreso$Provincia,"Latin-ASCII") #quitar tildes y ñs
View(ingreso)
ingreso<- read.xlsx("Ingreso-Per-Capita.xlsx",skipEmptyRows = T, skipEmptyCols = T ,startRow = 3)
ingreso <- ingreso[is.na(ingreso$Distrito),] #eliminar distritos
ingreso <- ingreso[!is.na(ingreso$Provincia),] #seleccionar provincias
ingreso <- ingreso[,c(1:3,5)]#seleccionar columas
colnames(ingreso) <- c("Ubigeo", "Departamento", "Provincia", "percapitaf")
View(ingreso)
ingreso$Provincia <- toupper(ingreso$Provincia) #mayusculas
ingreso$Provincia <- stri_trans_general(ingreso$Provincia,"Latin-ASCII") #quitar tildes y ñs
View(poblacion)
View(mapa)
View(mapa)
View(idhPeru)
View(idh_elec)
View(idh_elec)
View(fecundidad)
View(idh_elec)
fecundidad$Provincia[fecundidad$Provincia == "CARLOS F. FITZCARRALD"]
View(mapa)
fecundidad$Provincia[fecundidad$Provincia == "CARLOS F. FITZCARRALD"] <- "CARLOS FERMIN FITZCARRALD"
View(fecundidad)
View(indicadores)
indicadores$Provincia[indicadores$Provincia == "PROVINCIA CONSTITUCIONAL DEL CALLAO"] <- "CALLAO"
View(poblacion)
poblacion$Provincia[poblacion$Provincia == "PROVINCIA CONSTITUCIONAL DEL CALLAO"] <- "CALLAO"
View(ingreso)
View(ingreso)
ingreso<- read.xlsx("Ingreso-Per-Capita.xlsx",skipEmptyRows = T, skipEmptyCols = T ,startRow = 3)
View(ingreso)
ingreso<- read.xlsx("Ingreso-Per-Capita.xlsx",skipEmptyRows = T, skipEmptyCols = T ,startRow = 3)
ingreso <- ingreso[is.na(ingreso$Distrito),] #eliminar distritos
ingreso <- ingreso[!is.na(ingreso$Provincia),] #seleccionar provincias
ingreso <- ingreso[,c(1:3,5)]#seleccionar columas
colnames(ingreso) <- c("Ubigeo", "Departamento", "Provincia", "percapitaf")
ingreso$Provincia <- toupper(ingreso$Provincia) #mayusculas
ingreso$Provincia <- stri_trans_general(ingreso$Provincia,"Latin-ASCII") #quitar tildes y ñs
d3<-merge(mapas,fecundidad, by.x="Provincia", by.y="Provincia", sort=FALSE)
d3<-merge(mapa,fecundidad, by.x="Provincia", by.y="Provincia", sort=FALSE)
View(mapa)
d3<-merge(mapa,fecundidad, by.x="Provincia", by.y="Provincia", sort=FALSE, all.x=T, all.y=T)
View(d3)
View(fecundidad)
View(mapa)
View(fecundidad)
View(mapa)
View(mapa)
View(d3)
View(mapa)
View(mapa)
View(d3)
d3<-merge(mapa,idh_elec, by.x="Provincia", by.y="Provincia", sort=FALSE, all.x=T, all.y=T)
View(d3)
View(mapa)
View(mapa)
mapa$Provincia[mapa$Provincia == "HUENUCO"] <- "HUANUCO"
View(fecundidad)
View(idh_elec)
idh_elec$Provincia[idh_elec$Provincia == "DANIEL A. CARRION"] <- "DANIEL ALCIDES CARRION"
d3<-merge(mapa,idh_elec, by.x="Provincia", by.y="Provincia", sort=FALSE, all.x=T, all.y=T)
View(d3)
View(d3)
d3<-merge(mapa,fecundidad, by.x="Provincia", by.y="Provincia", sort=FALSE, all.x=T, all.y=T)
View(d3)
View(fecundidad)
View(idh_elec)
View(idhPeru)
idhPeru$Provincia[idhPeru$Provincia == "DANIEL A. CARRION"] <- "DANIEL ALCIDES CARRION"
View(idhPeru)
View(indicadores)
View(ingreso)
ingreso$Provincia[ingreso$Provincia == "DANIEL A. CARRION"] <- "DANIEL ALCIDES CARRION"
View(ingreso)
View(poblacion)
View(poblacion)
View(ingreso)
View(indicadores)
View(idhPeru)
View(idh_elec)
View(mapa)
View(idhPeru)
idhPeru[idhPeru$Provincia=="DATEM DEL MARANON",]
idhPeru <- idhPeru[!idhPeru$Provincia=="DATEM DEL MARANON",]
View(idhPeru)
idh_elec <- idh_elec[!idh_elec$Provincia=="DATEM DEL MARANON",]
View(idh_elec)
fecundidad <- fecundidad[!fecundidad$Provincia=="DATEM DEL MARANON",]
View(fecundidad)
fecundidad[fecundidad$Provincia=="DATEM DEL MARANON",]
fecundidad <- fecundidad[!fecundidad$Provincia=="DATEM DEL MARANON",]
View(fecundidad)
fecundidad[fecundidad$Provincia=="DATEM DEL MARANON ",]
fecundidad <- fecundidad[!fecundidad$Provincia=="DATEM DEL MARANON ",]
fecundidad <- fecundidad[fecundidad$Provincia=="CALLAO",]
fecundidad<- read.xlsx("fecundidad.xlsx",skipEmptyRows = T, skipEmptyCols = T, startRow = 3)
fecundidad$prov <- substr(fecundidad$Ubigeo,5,6) #identificar provincias y departamentos: 00
fecundidad$dep<- substr(fecundidad$Ubigeo,3,4) #identificar departamentos: 00
fecundidad<- fecundidad[!fecundidad$dep=="00" & fecundidad$prov=="00",][,c(1:5)] #seleccionar provincias
fecundidad<- fecundidad[complete.cases(fecundidad),]
colnames(fecundidad) <- c("Ubigeo", "Provincia", "mortalidadinf", "fecundidad", "desnutricion")
rownames(fecundidad) <- 1:nrow(fecundidad)
fecundidad[c(3:5)] =lapply(fecundidad[c(3:5)],as.numeric) #volverlas numericas
fecundidad$Provincia <- stri_trans_general(fecundidad$Provincia,"Latin-ASCII") #quitar tildes y ñs
##Callao está bien carlos fermin  esta como CARLOS F. FITZCARRALD transformar:
fecundidad$Provincia[fecundidad$Provincia == "CARLOS F. FITZCARRALD"] <- "CARLOS FERMIN FITZCARRALD"
#eliminar datem del marañon
fecundidad <- fecundidad[!fecundidad$Provincia=="DATEM DEL MARANON ",]
indicadores <- indicadores[!indicadores$Provincia=="DATEM DEL MARANON ",]
View(indicadores)
indicadores <- indicadores[!indicadores$Provincia=="DATEM DEL MARANON",]
poblacion <- poblacion[!poblacion$Provincia=="DATEM DEL MARANON",]
ingreso <- ingreso[!ingreso$Provincia=="DATEM DEL MARANON",]
d3<-merge(mapa,fecundidad, by.x="Provincia", by.y="Provincia", sort=FALSE, all.x=T, all.y=T)
View(d3)
d3<-merge(mapa,idh_elec, by.x="Provincia", by.y="Provincia", sort=FALSE, all.x=T, all.y=T)
View(d3)
d3<-merge(mapa,idhPeru, by.x="Provincia", by.y="Provincia", sort=FALSE, all.x=T, all.y=T)
View(idhPeru)
View(d3)
View(idhPeru)
idhPeru$Provincia[idhPeru$Provincia == "SATIPO 2/"] <- "SATIPO"
d3<-merge(mapa,idhPeru, by.x="Provincia", by.y="Provincia", sort=FALSE, all.x=T, all.y=T)
d3<-merge(mapa,indicadores, by.x="Provincia", by.y="Provincia", sort=FALSE, all.x=T, all.y=T)
d3<-merge(mapa,ingreso, by.x="Provincia", by.y="Provincia", sort=FALSE, all.x=T, all.y=T)
View(d3)
View(ingreso)
ingreso$Provincia[ingreso$Provincia == "SATIPO 2/"] <- "SATIPO"
d3<-merge(mapa,ingreso, by.x="Provincia", by.y="Provincia", sort=FALSE, all.x=T, all.y=T)
View(d3)
source('~/Documents/GitHub/EstadisticaMaestriaCPRI/script data .R')
View(d3)
write.dbf(mapa, file="provinciasPeru.dbf")
source('~/Documents/GitHub/EstadisticaMaestriaCPRI/script data .R')
write.xlsx(idhPeru, "idhPeru.xlsx")
write.xlsx(idh_elec, "idh_elec.xlsx")
write.xlsx(fecundidad, "fecundidad.xlsx")
write.xlsx(indicadores, "indicadoresvarios.xlsx")
write.xlsx(poblacion, "poblacion.xlsx")
write.xlsx(ingreso, "Ingreso-Per-Capita.xlsx")
source('~/Documents/GitHub/EstadisticaMaestriaCPRI/script data .R')
source('~/Documents/GitHub/EstadisticaMaestriaCPRI/script data .R')
idePeru<- read.xlsx("idePeru.xlsx",skipEmptyRows = T, skipEmptyCols = T, sheet=4, startRow = 5)
View(idePeru)
idePeru<- read.xlsx("idePeru.xlsx",skipEmptyRows = T, skipEmptyCols = T, sheet=4, startRow = 6)
View(idePeru)
head(idePeru)
View(idePeru)
idePeru <- idePeru[-c(221:224),]#eliminar filas innecesarias
View(idePeru)
View(idePeru)
idePeru <- idePeru[is.na(idePeru$X2),] #seleccionar provincias
View(idePeru)
names(idePeru)
idePeru <- idePeru[,-c(2,5,7,9,11,13,15,17)]#eliminar columnas
View(idePeru)
View(idePeru)
View(idePeru)
View(idePeru)
colnames(idePeru) <- c("Ubigeo", "Provincia", "habitantes", "IDE", "identidad", "salud", "educacion", "saneamiento", "electrificacion")
View(idePeru)
idePeru$Provincia <- toupper(idePeru$Provincia) #mayusculas
idePeru$Provincia <- stri_trans_general(idePeru$Provincia,"Latin-ASCII") #quitar tildes y ñs
View(idePeru)
idePeru$Provincia[idePeru$Provincia == "DANIEL A. CARRION"] <- "DANIEL ALCIDES CARRION"
idePeru$Provincia[idePeru$Provincia == "SATIPO 1/"] <- "SATIPO"
idePeru <- idePeru[!idePeru$Provincia=="DATEM DEL MARANON",]
source('~/Documents/GitHub/EstadisticaMaestriaCPRI/script data .R')
write.xlsx(idePeru, "idePeru.xlsx")
source('~/Documents/GitHub/EstadisticaMaestriaCPRI/script data .R')
source('~/Documents/GitHub/EstadisticaMaestriaCPRI/script data .R')
d3<-merge(mapa,idePeru, by.x="Provincia", by.y="Provincia", sort=FALSE, all.x=T, all.y=T)
View(d3)
source('~/Documents/GitHub/EstadisticaMaestriaCPRI/script data .R')
source('~/Documents/GitHub/EstadisticaMaestriaCPRI/script data .R')
